<?php
$standard = Mage::getSingleton('paytpvcom/standard');


$iframe_src = $standard->getPayTpvBankStoreUrl().'?'.$standard->getStandardAddUserFields();
$_code=$this->getMethodCode();
$remember = ($standard->getConfigData('remembercardselected'))?"checked":"";

?>


<ul id="payment_form_<?php echo $_code ?>" class="form-list" style="display:none;">
    <?php 
    $saveCard = 0;
    $card_select = (isset($_POST["payment"]["card"]))?$_POST["payment"]["card"]:"";

    if (sizeof($this->getCustomerCards())>0 && !$isRecurring):?>
    
    <li id="saved_cards">
        <label for="card"><?php print $this->__('Pay by Credit Card');?>:</label>
        <div class="input-box">
        <select name="payment[card]" id="card" onChange="checkCardWS(this)">
              <?php 
              
              $selected = "selected=\"selected\"";
              foreach ($this->getCustomerCards() as $card){
                 $saveCard = 1; // Exists tokenized Cards
                 $card_desc = ($card["card_desc"]!="")?"- " . $card["card_desc"]:"";

                 // If selected card -> select this, else select first card in query (last tokenized)
                 if ($card_select!="")  $selected = ($card['paytpv_iduser']==$card_select)?$selected:"";

                 print "<option value=".$card['paytpv_iduser']." $selected>".$card["paytpv_cc"] . " (".$card["paytpv_brand"].") ". $card_desc . "</option>";

                 // If a selecte card, remove selected prop for other 
                 if ($selected!="")  $selected = "";
              }
              ?>
              <option value='0' <?php if ($card_select==="0") print "selected=\"selected\"";?>><?php print $this->__('NEW CARD');?></option>
        </select>
        </div>
        <?php if ($commerce_password==1){?>
            <div id="user_validation" style="<?php if ($saveCard==0 || $card_select==="0") print "display:none;";?>">
                <label for="userpwd"><?php echo $this->__('For security, enter your user password Store') . ":"?></label>  
                <div class="input-box">
                <input type="password" style="width:200px" name="payment[userpwd]" id="userpwd">
                </div>
            </div>
        <?php } ?>
    
    </li>

    <?php endif;?>
        
    <?php 
        $message = $this->getMessage();
        if($message != ''){
            echo "<p>".$message."</p>";
        }
    ?>

    <?php 

    $paytpviframe = $standard->getConfigData('paytpviframe');
    $integration = $standard->getConfigData('integration');

    // Begin IF paytpviframe=0
    if ($paytpviframe!="1"){ 
    
    ?>

    <li id="payment_form_<?php echo $_code ?>_cc" <?php if($saveCard > 0 && $card_select!=="0"){?>style="display:none;"<?php } ?>>
        <ul>

            <?php 
            // BANKSTORE IFRAME/XML
            if ($integration!=1):?>
                <?php if ($show_nameoncard):?>
                <li>
                    <label for="<?php echo $_code ?>_cc_owner" class="required"><em>*</em><?php echo $this->__('Name on Card') ?></label>
                    <div class="input-box">
                        <input type="text" title="<?php echo $this->__('Name on Card') ?>" class="input-text required-entry" id="<?php echo $_code ?>_cc_owner" name="payment[cc_owner]" value="<?php echo $this->escapeHtml($this->getInfoData('cc_owner')) ?>" />
                    </div>
                </li>
                <?php endif; ?>
                <?php if ($show_cctypes):?>
                <li>
                    <label for="<?php echo $_code ?>_cc_type" class="required"><em>*</em><?php echo $this->__('Credit Card Type') ?></label>
                    <div class="input-box">
                        <select id="<?php echo $_code ?>_cc_type" name="payment[cc_type]" title="<?php echo $this->__('Credit Card Type') ?>" class="required-entry validate-cc-type-select">
                            <option value=""><?php echo $this->__('--Please Select--') ?></option>
                        <?php $_ccType = $this->getInfoData('cc_type') ?>
                        <?php foreach ($this->getCcAvailableTypes() as $_typeCode => $_typeName): ?>
                            <option value="<?php echo $_typeCode ?>"<?php if($_typeCode==$_ccType): ?> selected="selected"<?php endif ?>><?php echo $_typeName ?></option>
                        <?php endforeach ?>
                        </select>
                    </div>
                </li>
                <?php endif; ?>
                <li>
                    <label for="<?php echo $_code ?>_cc_number" class="required"><em>*</em><?php echo $this->__('Credit Card Number') ?></label>
                    <div class="input-box">
                        <input type="text" id="<?php echo $_code ?>_cc_number" name="payment[cc_number]" title="<?php echo $this->__('Credit Card Number') ?>" class="input-text validate-cc-number<?php if ($show_cctypes) print " validate-cc-type";?>" value="" />
                    </div>
                </li>
                <li>
                    <label for="<?php echo $_code ?>_expiration" class="required"><em>*</em><?php echo $this->__('Expiration Date') ?></label>
                    <div class="input-box">
                        <div class="v-fix">
                            <select id="<?php echo $_code ?>_expiration" name="payment[cc_exp_month]" class="month validate-cc-exp required-entry">
                            <?php $_ccExpMonth = $this->getInfoData('cc_exp_month') ?>
                            <?php foreach ($this->getCcMonths() as $k=>$v): ?>
                                <option value="<?php echo $k?$k:'' ?>"<?php if($k==$_ccExpMonth): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                            <?php endforeach ?>
                            </select>
                        </div>
                        <div class="v-fix">
                            <?php $_ccExpYear = $this->getInfoData('cc_exp_year') ?>
                            <select id="<?php echo $_code ?>_expiration_yr" name="payment[cc_exp_year]" class="year required-entry">
                            <?php foreach ($this->getCcYears() as $k=>$v): ?>
                                <option value="<?php echo $k?$k:'' ?>"<?php if($k==$_ccExpYear): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                            <?php endforeach ?>
                            </select>
                        </div>
                    </div>
                </li>
                <?php echo $this->getChildHtml() ?>
                <?php if($this->hasVerification()): ?>
                <li>
                    <label for="<?php echo $_code ?>_cc_cid" class="required"><em>*</em><?php echo $this->__('Card Verification Number') ?></label>
                    <div class="input-box">
                        <div class="v-fix">
                            <input type="text" title="<?php echo $this->__('Card Verification Number') ?>" class="input-text cvv required-entry validate-cc-cvn" id="<?php echo $_code ?>_cc_cid" name="payment[cc_cid]" value="" />
                        </div>
                        <a href="#" class="cvv-what-is-this"><?php echo $this->__('What is this?') ?></a>
                    </div>
                </li>
                <?php endif; ?>
                <?php if ($this->hasSsCardType()): ?>
                <li id="<?php echo $_code ?>_cc_type_ss_div">
                    <ul class="inner-form">
                        <li class="form-alt"><label for="<?php echo $_code ?>_cc_issue" class="required"><em>*</em><?php echo $this->__('Switch/Solo/Maestro Only') ?></label></li>
                        <li>
                            <label for="<?php echo $_code ?>_cc_issue"><?php echo $this->__('Issue Number') ?>:</label>
                            <span class="input-box">
                                <input type="text" title="<?php echo $this->__('Issue Number') ?>" class="input-text validate-cc-ukss cvv" id="<?php echo $_code ?>_cc_issue" name="payment[cc_ss_issue]" value="" />
                            </span>
                        </li>

                        <li>
                            <label for="<?php echo $_code ?>_start_month"><?php echo $this->__('Start Date') ?>:</label>
                            <div class="input-box">
                                <div class="v-fix">
                                    <select id="<?php echo $_code ?>_start_month" name="payment[cc_ss_start_month]" class="validate-cc-ukss month">
                                    <?php foreach ($this->getCcMonths() as $k=>$v): ?>
                                        <option value="<?php echo $k?$k:'' ?>"<?php if($k==$this->getInfoData('cc_ss_start_month')): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                                    <?php endforeach ?>
                                    </select>
                                </div>
                                <div class="v-fix">
                                    <select id="<?php echo $_code ?>_start_year" name="payment[cc_ss_start_year]" class="validate-cc-ukss year">
                                    <?php foreach ($this->getSsStartYears() as $k=>$v): ?>
                                        <option value="<?php echo $k?$k:'' ?>"<?php if($k==$this->getInfoData('cc_ss_start_year')): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                                    <?php endforeach ?>
                                    </select>
                                </div>
                            </div>
                        </li>
                        <li class="adv-container">&nbsp;</li>
                    </ul>
                    <script type="text/javascript">
                    //<![CDATA[
                    var SSChecked<?php echo $_code ?> = function() {
                        var elm = $('<?php echo $_code ?>_cc_type');
                        if (['SS','SM','SO'].indexOf(elm.value) != -1) {
                            $('<?php echo $_code ?>_cc_type_ss_div').show();
                        } else {
                            $('<?php echo $_code ?>_cc_type_ss_div').hide();
                        }
                    };

                    Event.observe($('<?php echo $_code ?>_cc_type'), 'change', SSChecked<?php echo $_code ?>);
                    SSChecked<?php echo $_code ?>();
                    //]]>
                    </script>
                </li>
                <?php endif; ?>

            <?php
            // BANKSTORE JET/XML
            elseif ($integration==1):?>
                <li class="paytpv_jet">
                    <div class="bloque_jet">
                        <h4><?php echo $this->__('Enter your card'); ?></h4>
                        <ul>
                            <li>
                                <label for="MERCHANT_PAN"><?php echo $this->__('Credit Card Number') ?>:</label>
                                <input type="text" data-paytpv1="paNumber" width="360" maxlength="16" value="" required="required" placeholder="1234 5678 9012 3456" pattern="[0-9]{15,16}" onclick="this.value='';">
                            </li>
                            <li class="vertical">
                                <ul>
                                    <li>
                                        <label for="expiry_date"><?php echo $this->__('Expiration') ?></label>
                                        <input maxlength="5" placeholder="<?php echo $this->__('mm/yy') ?>" id="expiry_date" required="required" pattern="[0-9]{2}/+[0-9]{2}" type="text" onChange="buildED();">
                                        <input type="hidden" data-paytpv1="dateMonth" maxlength="2"  value="">
                                        <input type="hidden" data-paytpv1="dateYear" maxlength="2" value="">
                                    </li>
                                    <li>
                                        <label for="MERCHANT_CVC2"><?php echo $this->__('CVV') ?></label>
                                        <input type="text" data-paytpv1="cvc2" maxlength="4" value="" required="required" placeholder="123" pattern="[0-9]{3,4}" onclick="this.value='';">
                                        <a href="#" class="cvv-what-is-this"><?php echo $this->__('What is this?') ?></a>
                                    </li>
                                </ul>
                            </li>
                            
                            <li>
                                <label for="Nombre"><?php echo $this->__('Name on Card') ?>:</label>
                                <input type="text" class="paytpv_cardholdername" data-paytpv1="cardHolderName" width="360" maxlength="50" value="" required="required" placeholder="<?php echo $this->__('Name on Card') ?>" onclick="this.value='';">
                            </li>
                                
                            <input type="hidden" name="validation" class="validate-bkjet">
                            
                            <li style="display:none;" class="paymentError">
                                <span style="color:red;font-weight:bold;" id="paymentErrorMsg"></span>
                            </li>

                            <input type="hidden" name="payment[paytpvToken]" id="paytpvToken">
                        </ul>
                    </div>
                </li>

                
                <script type="text/javascript">
                //<![CDATA[
                <?php 
                include("paytpv/Minifier.php");

                $js_code = "
                (function() {

                        (function() {

                            var $,
                            __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

                            $ = " . '$jq' . ";

                " . '$jq' . ".fn.validateCreditCard = function(callback, options) {
                    var bind, card, card_type, card_types, get_card_type, is_valid_length, is_valid_luhn, normalize, validate, validate_number, _i, _len, _ref;
                    card_types = [
                  {
                    name: 'amex',
                    pattern: /^3[47]/,
                    valid_length: [15]
                  }, {
                    name: 'diners_club_carte_blanche',
                    pattern: /^30[0-5]/,
                    valid_length: [14]
                  }, {
                    name: 'diners_club_international',
                    pattern: /^36/,
                    valid_length: [14]
                  }, {
                    name: 'jcb',
                    pattern: /^35(2[89]|[3-8][0-9])/,
                    valid_length: [16]
                  }, {
                    name: 'laser',
                    pattern: /^(6304|670[69]|6771)/,
                    valid_length: [16, 17, 18, 19]
                  }, {
                    name: 'visa_electron',
                    pattern: /^(4026|417500|4508|4844|491(3|7))/,
                    valid_length: [16]
                  }, {
                    name: 'visa',
                    pattern: /^4/,
                    valid_length: [16]
                  }, {
                    name: 'mastercard',
                    // 20160603 2U7-GQS-M6X3 Cambiamos el patern ya que MC ha incluido nuevos rangos de bines
                    pattern: /^(5[1-5]|222|2[3-6]|27[0-1]|2720)/,
                    // 20160603 2U7-GQS-M6X3 Fin
                    valid_length: [16]
                  }, {
                    name: 'maestro',
                    pattern: /^(5018|5020|5038|6304|6759|676[1-3])/,
                    valid_length: [12, 13, 14, 15, 16, 17, 18, 19]
                  }, {
                    name: 'discover',
                    pattern: /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,
                    valid_length: [16]
                  }
                ];
                bind = false;
                if (callback) {
                  if (typeof callback === 'object') {
                    options = callback;
                    bind = false;
                    callback = null;
                  } else if (typeof callback === 'function') {
                    bind = true;
                  }
                }
                if (options === null) {
                  options = {};
                }
                if (options.accept === null) {
                  options.accept = (function() {
                    var _i, _len, _results;
                    _results = [];
                    for (_i = 0, _len = card_types.length; _i < _len; _i++) {
                      card = card_types[_i];
                      _results.push(card.name);
                    }
                    return _results;
                  })();
                }
                _ref = options.accept;
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  card_type = _ref[_i];
                  if (__indexOf.call((function() {
                    var _j, _len1, _results;
                    _results = [];
                    for (_j = 0, _len1 = card_types.length; _j < _len1; _j++) {
                      card = card_types[_j];
                      _results.push(card.name);
                    }
                    return _results;
                  })(), card_type) < 0) {
                    throw 'Tarjeta no válida';
                  }
                }
                get_card_type = function(number) {
                  var _j, _len1, _ref1;
                  _ref1 = (function() {
                    var _k, _len1, _ref1, _results;
                    _results = [];
                    for (_k = 0, _len1 = card_types.length; _k < _len1; _k++) {
                      card = card_types[_k];
                      if (_ref1 = card.name, __indexOf.call(options.accept, _ref1) >= 0) {
                        _results.push(card);
                      }
                    }
                    return _results;
                  })();
                  for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
                    card_type = _ref1[_j];
                    if (number.match(card_type.pattern)) {
                      return card_type;
                    }
                  }
                  return null;
                };
                is_valid_luhn = function(number) {
                  var digit, n, sum, _j, _len1, _ref1;
                  sum = 0;
                  _ref1 = number.split('').reverse();
                  for (n = _j = 0, _len1 = _ref1.length; _j < _len1; n = ++_j) {
                    digit = _ref1[n];
                    digit = +digit;
                    if (n % 2) {
                      digit *= 2;
                      if (digit < 10) {
                        sum += digit;
                      } else {
                        sum += digit - 9;
                      }
                    } else {
                      sum += digit;
                    }
                  }
                  return sum % 10 === 0;
                };
                is_valid_length = function(number, card_type) {
                  var _ref1;
                  return _ref1 = number.length, __indexOf.call(card_type.valid_length, _ref1) >= 0;
                };
                validate_number = (function(_this) {
                  return function(number) {
                    var length_valid, luhn_valid;
                    card_type = get_card_type(number);
                    luhn_valid = false;
                    length_valid = false;
                    if (card_type !== null) {
                      luhn_valid = is_valid_luhn(number);
                      length_valid = is_valid_length(number, card_type);
                    }
                    return {
                      card_type: card_type,
                      valid: luhn_valid && length_valid,
                      luhn_valid: luhn_valid,
                      length_valid: length_valid
                    };
                  };
                })(this);
                validate = (function(_this) {
                  return function() {
                    var number;
                    
                    number = normalize(_this.val());
                    return validate_number(number);
                  };
                })(this);
                normalize = function(number) {
                  return number.replace(/[ -]/g, '');
                };
                if (!bind) {
                  return validate();
                }
                this.on('input.jccv', (function(_this) {
                  return function() {
                    " . '$jq' . "(_this).off('keyup.jccv');
                    return callback.call(_this, validate());
                  };
                })(this));
                this.on('keyup.jccv', (function(_this) {
                  return function() {
                    return callback.call(_this, validate());
                  };
                })(this));
                callback.call(this, validate());
                return this;
              };

            }).call(this);
                " . '$jq' . "(function() {
                    return " . '$jq' . "('[data-paytpv1=\'paNumber\']').validateCreditCard(function(result) {
                    " . '$jq' . "(this).removeClass().addClass('paytpv_merchant_pan');
                        if (result.card_type === null) {
                            return;
                        }
                        " . '$jq' . "(this).addClass(result.card_type.name);
                        if (result.valid) {
                            return " . '$jq' . "(this).addClass('valid');
                        } else {
                            return " . '$jq' . "(this).removeClass('valid');
                        }
                    }, {
                    accept: ['visa', 'visa_electron', 'mastercard', 'maestro', 'discover', 'amex']
                    });
                });
            }).call(this);

                buildED = function() {
                    var strED = document.getElementById('expiry_date').value;

                    var mm = strED.substr(0, 2);
                    var yy = strED.substr(3, 2);
                    " . '$jq' . "('[data-paytpv1=\'dateMonth\']').val(mm), " . '$jq' . "('[data-paytpv1=\'dateYear\']').val(yy)
                    return;
                }

                createJetForm = function(setVars){

                    if (setVars==0){
                        " . '$jq' . "('#paytpvPaymentForm').remove();
                        var form = " . '$jq' . "('<form/>',{ action:'". $this->getUrl('paytpvcom/standard/bkjet') ."', name:'paytpvPaymentForm', id:'paytpvPaymentForm'})
                        " . '$jq' . "('body').append(form);

                    }else if (setVars==1){
                        " . '$jq' . "('#paytpvPaymentForm').append( 
                            " . '$jq' . "('<input>').attr({ type:'hidden', value:" . '$jq' . "('[data-paytpv1=\'paNumber\']').val()}).attr('data-paytpv','paNumber')
                        );

                        " . '$jq' . "('#paytpvPaymentForm').append( 
                            " . '$jq' . "('<input>').attr({ type:'hidden', value:" . '$jq' . "('[data-paytpv1=\'dateMonth\']').val()}).attr('data-paytpv','dateMonth')
                        );

                        " . '$jq' . "('#paytpvPaymentForm').append( 
                            " . '$jq' . "('<input>').attr({ type:'hidden', value:" . '$jq' . "('[data-paytpv1=\'dateYear\']').val()}).attr('data-paytpv','dateYear')
                        );

                        " . '$jq' . "('#paytpvPaymentForm').append( 
                            " . '$jq' . "('<input>').attr({ type:'hidden', value:" . '$jq' . "('[data-paytpv1=\'cvc2\']').val()}).attr('data-paytpv','cvc2')
                        );

                        " . '$jq' . "('#paytpvPaymentForm').append( 
                            " . '$jq' . "('<input>').attr({ type:'hidden', value:" . '$jq' . "('[data-paytpv1=\'cardHolderName\']').val()}).attr('data-paytpv','cardHolderName')
        
                        );
                    }else if (setVars==2){
                        " . '$jq' . "('#paytpvPaymentForm').empty();
                    }
                }



                function getParameterByName(name, url) {
                    if (!url) url = document.location.href;
                    url = url.toLowerCase();
                    name = name.replace(/[\[\]]/g, '\\$&').toLowerCase();
                    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
                    results = regex.exec(url);
                    if (!results) return null;
                    if (!results[2]) return '';
                    return decodeURIComponent(results[2].replace(/\+/g, ' '));
                }

                " . '$jq' . "(document).ready(function($) {
                    if (" . '$jq' . "('#card'))   checkCardWS(" . '$jq' . "('#card'));

                    /* Validation Bk_jet */
                    Validation.add('validate-bkjet', '', function(v) {
                        valid = (document.getElementById('paymentErrorMsg').innerHTML=='')?true:false;
                        return valid;
                    })

                    Object.extend(Validation, {
                        insertAdvice : function(elm, advice){}       
                    });
                    createJetForm(0); // Create Jet Form
                    jQuery.getScript('https://secure.paytpv.com/gateway/jet_paytpv_js.php?id=" . $standard->getConfigData('jetid') . "&language=" . $standard->calcLanguage(Mage::app()->getLocale()->getLocaleCode()) ."');

                    " . '$jq' . "('#expiry_date').on('input',function(){
                        var curLength = " . '$jq' . "(this).val().length;
                        if(curLength === 2){
                            var newInput = " . '$jq' . "(this).val();
                            newInput += '/';
                            " . '$jq' . "(this).val(newInput);
                        }
                    });
               
                });
                
                payment.addBeforeValidateFunction('bk_jet', function() {
                    
                    buildED(); // set Jet Form Values
                    createJetForm(1);
                    takingOff();
                    createJetForm(2); // Clear Jet Form
                    
                });";
                print Minifier::minify($js_code);
                ?>
                
                </script>
                

            <?php endif; ?>
            <?php if (!$isRecurring):?>
            <li>
                <div class="input-box">
                <div id="storingStep" class="alert alert-info"  <?php if ($saveCard==1) print "style='display:none'";?>>
                    <!--
                    <h4><?php print $this->__('STREAMLINE YOUR FUTURE PURCHASES!');?></h4>
                    <?php print $this->__('Link a card to your account to make all procedures easily and quickly.');?>
                    <br>
                    -->
                    <input type="checkbox" name="payment[remember]" id="savecard" class="input-checkbox" <?php print $remember;?>> <?php print $this->__('Yes, remember my card accepting ');?><a class="open_conditions" href="#conditions"><?php print $this->__('terms and conditions of service');?></a>.
                </div>
                </div>
            <li>
            <?php endif; ?>
            <?php if ($isRecurring):?>
                <div class="alert alert-info">
                    <?php print $this->__('By subscribing you agree to the ');?> <a href="#conditions" class="open_conditions" href="#"><?php print $this->__('terms and conditions of service');?></a>.
                </div>

            <?php endif; ?>
        </ul>
    <li>

    <?php
    // END IF paytpviframe=0
    }
    ?>

    <input type="hidden" name="base_url" id="base_url" value="<?php print Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB,array('_secure'=>true));?>">

    <input type="hidden" name="conditions_url" id="conditions_url" value="<?php print $this->getUrl('paytpvcom/standard/conditions');?>">
</ul>
